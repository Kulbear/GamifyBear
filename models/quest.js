// Description: This file contains class definition for the quest related data model.

function generateUniqueID(prefix) {
	// generate a unique ID that start with the prefix and followed by a random text of 6 characters with numbers and letters
	return prefix + Math.random().toString(36).substring(2, 8);
}

/**
 * RawQuest is the class that contains the raw data of the quest submitted by the user.
 * `RawQuest` is used to store the raw data of the quest before it is reviewed by the admin.
 */
class RawQuest {
	/**
	 * Create a RawQuest.
	 */
	constructor() {
		this.rawQuestId = null;
		this.description = null;
		this.createBy = null;
		this.durationTextRaw = null;
		this.reviewed = false;
		this.approved = false;

		// this should be generated by the database when the data is inserted
		this.createAt = null;
	}

	/**
	 * Set the description of the quest.
	 * @param {string} description - The description of the quest.
	 */
	setDescription(description) {
		this.description = description;
	}

	/**
	 * Set the creator of the quest.
	 * @param {string} dcId - The ID of the creator.
	 */
	setCreateBy(dcId) {
		this.createBy = dcId;
	}

	/**
	 * Set the raw duration text of the quest.
	 * @param {string} durationTextRaw - The raw duration text of the quest.
	 */
	setDuration(durationTextRaw) {
		this.durationTextRaw = durationTextRaw;
	}

	/**
	 * Generates a unique quest raw ID and assigns it to the `RawQuestId` property.
	 * @returns {void}
	 */
	generateRawQuestId() {
		this.rawQuestId = generateUniqueID('QR');
	}

	/**
	 * Toggles the `reviewed` property.
	 * @returns {void}
	 */
	toggleReviewed() {
		this.reviewed = !this.reviewed;
	}

	/**
	 * Toggles the `approved` property.
	 * @returns {void}
	 */
	toggleApproved() {
		this.approved = !this.approved;
	}

	/**
	 * Update the attributes of the RawQuest from a store.
	 * @param {Object} attributes - The attributes to update.
	 */
	updateAttributeFromStore(attributes) {
		this.rawQuestId = attributes['rawQuestId'];
		this.description = attributes['description'];
		this.createBy = attributes['createBy'];
		this.durationTextRaw = attributes['durationTextRaw'];
		this.reviewed = attributes['reviewed'];
		this.createAt = attributes['createAt'];
		this.approved = attributes['approved'];
	}

	/**
	 * Return the attributes of the RawQuest to be stored.
	 * @returns {Object} - The attributes of the RawQuest.
	 */
	returnAttributeToStore() {
		return {
			'rawQuestId': this.rawQuestId,
			'description': this.description,
			'createBy': this.createBy,
			'durationTextRaw': this.durationTextRaw,
			'reviewed': this.reviewed,
			'approved': this.approved,
		};
	}
}


/**
 * `Quest` is the class that represents a quest data model.
 * Each `Quest` is created by the admin after review a `RawQuest` object.
 */
class Quest {
	/**
	 * Create a Quest.
	 */
	constructor() {
		this.description = null;
		this.quest_type = null;
		this.repeatable = false;

		this.reward_coefficient = null;
		this.reward_exp = null;

		this.create_at = null;
		this.expire_at = null;
		this.createBy = null;
	}

	/**
	 * Set the description of the quest.
	 * @param {string} description - The description of the quest.
	 */
	setDescription(description) {
		this.description = description;
	}

	/**
	 * Set the quest type of the quest.
	 * @param {string} quest_type - The quest type of the quest.
	 */
	setQuestType(quest_type) {
		this.quest_type = quest_type;
	}

	/**
	 * Set the repeatable flag of the quest.
	 * @param {boolean} repeatable - The repeatable flag of the quest.
	 */
	setRepeatable(repeatable) {
		this.repeatable = repeatable;
	}

	/**
	 * Set the reward coefficient of the quest.
	 * @param {number} reward_coefficient - The reward coefficient of the quest.
	 */
	setRewardCoefficient(reward_coefficient) {
		this.reward_coefficient = reward_coefficient;
	}

	/**
	 * Set the reward experience of the quest.
	 * @param {number} reward_exp - The reward experience of the quest.
	 */
	setRewardExp(reward_exp) {
		this.reward_exp = reward_exp;
	}

	/**
	 * Set the creation time of the quest.
	 * @param {Date} create_at - The creation time of the quest.
	 */
	setCreateAt(create_at) {
		this.create_at = create_at;
	}

	/**
	 * Set the expiration time of the quest.
	 * @param {Date} expire_at - The expiration time of the quest.
	 */
	setExpireAt(expire_at) {
		this.expire_at = expire_at;
	}

	/**
	 * Set the creator ID of the quest.
	 * @param {string} dcId - The creator ID of the quest.
	 */
	setCreateBy(dcId) {
		this.createBy = dcId;
	}

	/**
	 * Update the attributes of the Quest from a store.
	 * @param {Object} attributes - The attributes to update.
	 */
	updateAttributeFromStore(attributes) {
		this.description = attributes['description'];
		this.createBy = attributes['createBy'];
		this.quest_type = attributes['quest_type'];
		this.reward_coefficient = attributes['reward_coefficient'];
		this.reward_exp = attributes['reward_exp'];
		this.create_at = attributes['create_at'];
		this.expire_at = attributes['expire_at'];
	}

	/**
	 * Return the attributes of the Quest to be stored.
	 * @returns {Object} - The attributes of the Quest.
	 */
	returnAttributeToStore() {
		return {
			'description': this.description,
			'createBy': this.createBy,
			'quest_type': this.quest_type,
			'reward_coefficient': this.reward_coefficient,
			'reward_exp': this.reward_exp,
			'create_at': this.create_at,
			'expire_at': this.expire_at,
		};
	}
}


/**
 * QuestInstance is the class that contains the instance of data related to a quest accepted by the user.
 * Each Quest object can be accepted by multiple users, and each user will have their own corresponding QuestInstance object.
 */
class QuestInstance {
	/**
	 * Create a QuestInstance.
	 * @param {string} questId - The ID of the quest.
	 * @param {string} dcId - The ID of the user.
	 */
	constructor(questId, dcId) {
		this.questId = questId;
		this.dcId = dcId;
		this.accepted_at = null;
		this.completed_at = null;
		this.failed_at = null;
	}

	/**
	 * Update the attributes of the QuestInstance from a store.
	 * @param {Object} attributes - The attributes to update.
	 */
	updateAttributeFromStore(attributes) {
		this.questId = attributes['questId'];
		this.dcId = attributes['dcId'];
		this.accepted_at = attributes['accepted_at'];
		this.completed_at = attributes['completed_at'];
		this.failed_at = attributes['failed_at'];
	}

	/**
	 * Return the attributes of the QuestInstance to be stored.
	 * @returns {Object} - The attributes of the QuestInstance.
	 */
	returnAttributeToStore() {
		return {
			'questId': this.questId,
			'dcId': this.dcId,
			'accepted_at': this.accepted_at,
			'completed_at': this.completed_at,
			'failed_at': this.failed_at,
		};
	}

	/**
	 * Get the current time.
	 * @returns {Date} - The current time.
	 */
	getCurrentTime() {
		return new Date();
	}

	/**
	 * Set the accepted_at attribute to the current time.
	 */
	questAcceptAt() {
		this.accepted_at = this.getCurrentTime();
	}

	/**
	 * Set the completed_at attribute to the current time.
	 */
	questCompleteAt() {
		this.completed_at = this.getCurrentTime();
	}

	/**
	 * Set the failed_at attribute to the current time.
	 */
	questFailedAt() {
		this.failed_at = this.getCurrentTime();
	}
}


module.exports = {
	Quest,
	RawQuest,
	QuestInstance,
};